#include "atom_includes.hpp"
struct Object {
    [[>>>]]
};

struct shared_ {
    Object [[>>>]];
};

int main() {
    std::unique_ptr<shared_> srd_(std::make_unique<shared_>({
        {[[>>>]]},
    }));
    shared_* last_ptr_ = srd_.get();
    log<shared_> history;
    [[>>>]]
    for (double time_ = 0; time_ < t) {
        for (comb_.reset(); comb_.get(0); ++comb_) {
            [[>>>]]
        }
        history.push_back(std::move(srd_));
        time_ += step;
    }
}
